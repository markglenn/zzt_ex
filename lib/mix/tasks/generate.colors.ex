defmodule Mix.Tasks.Generate.Colors do
  use Mix.Task
  use Bitwise

  @shortdoc "Generate the file assets/css/colors.css"

  @color_definitions """
  /* Generated by mix generate.colors */

  :root {
    --ansi-black: rgb(0,0,0);
    --ansi-blue: rgb(0, 0, 170);
    --ansi-green: rgb(0, 170, 0);
    --ansi-cyan: rgb(0, 170, 170);
    --ansi-red: rgb(170, 0, 0);
    --ansi-magenta: rgb(170, 0, 170);
    --ansi-brown: rgb(170, 85, 0);
    --ansi-gray: rgb(170, 170, 170);

    --ansi-charcoal: rgb(85, 85, 85);
    --ansi-bright-blue: rgb(85, 85, 255);
    --ansi-bright-green: rgb(85, 255, 85);
    --ansi-bright-cyan: rgb(85, 255, 255);
    --ansi-bright-red: rgb(255, 85, 85);
    --ansi-pink: rgb(255, 85, 255);
    --ansi-yellow: rgb(255, 255, 85);
    --ansi-white: rgb(255, 255, 255);
  }

  """

  @moduledoc """
  This is where we would put any long form documentation or doctests.
  """

  def run(_args) do
    colors = [
      "--ansi-black",
      "--ansi-blue",
      "--ansi-green",
      "--ansi-cyan",
      "--ansi-red",
      "--ansi-magenta",
      "--ansi-brown",
      "--ansi-gray",
      "--ansi-charcoal",
      "--ansi-bright-blue",
      "--ansi-bright-green",
      "--ansi-bright-cyan",
      "--ansi-bright-red",
      "--ansi-pink",
      "--ansi-yellow",
      "--ansi-white"
    ]

    {:ok, file} = File.open("assets/css/colors.css", [:write])

    IO.binwrite(file, @color_definitions)

    for color <- 0..255 do
      fg = Enum.at(colors, color &&& 0x0F)
      bg = Enum.at(colors, color >>> 4 &&& 0x07)
      # blinking = color > 0x80

      color_name =
        color
        |> Integer.to_string(16)
        |> String.pad_leading(2, "0")

      IO.binwrite(file, ".c#{color_name} { color: var(#{fg}); background: var(#{bg}); }\n")
    end

    File.close(file)
  end
end
